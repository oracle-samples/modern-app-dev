openapi: 3.0.1
info:
  title: Provider Service
  description: Provider service of UHO healthcare app
  version: 0.0.1
tags:
  - name: provider
    description: Includes all operations that can be performed by or on provider
paths:
  /v1/providers:
    post:
      tags:
        - provider
      summary: Create a new provider
      description: Create a new provider in the UHO database
      operationId: CreateProvider
      parameters: []
      requestBody:
        description: Provider details that needs to be added to the UHO Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProviderDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/providers/actions/search:
    get:
      tags:
        - provider
      summary: Filtered list of providers
      description: Get a list of providers based on search criteria
      operationId: ListProviders
      parameters:
        - name: speciality
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: city
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: name
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: limit
          in: query
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            nullable: true
            default: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderCollection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/providers/username/{username}:
    get:
      tags:
        - provider
      summary: Get provider details by username
      description: Returns the details of the provider specified by username
      operationId: GetProviderByUsername
      parameters:
        - name: username
          in: path
          description: Username of provider
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/providers/{providerId}:
    get:
      tags:
        - provider
      summary: Get a provider by provider ID
      description: Returns the details of the specified provider
      operationId: GetProvider
      parameters:
        - name: providerId
          in: path
          description: Provider id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    delete:
      tags:
        - provider
      summary: Delete a provider
      description: Delete specified provider by id
      operationId: DeleteProvider
      parameters:
        - name: providerId
          in: path
          description: Provider id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/providers/{providerId}/feedbacks:
    get:
      tags:
        - provider
      summary: Filtered list of feedbacks
      description: Get a list of slots based on search criteria
      operationId: ListFeedbacks
      parameters:
        - name: providerId
          in: path
          description: Provider id
          required: true
          schema:
            type: integer
            format: int32
        - name: patientId
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: rating
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: limit
          in: query
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            nullable: true
            default: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackCollection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    post:
      tags:
        - provider
      summary: Create a new feedback
      description: Create a feedback for a provider
      operationId: CreateFeedback
      parameters:
        - name: providerId
          in: path
          description: Provider id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Feedback details that needs to be added under provider
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedbackDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/providers/{providerId}/schedules:
    get:
      tags:
        - provider
      summary: Filtered list of schedules
      description: Get a list of schedules based on search criteria
      operationId: ListSchedules
      parameters:
        - name: providerId
          in: path
          description: Provider id
          required: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            nullable: true
            default: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleCollection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    post:
      tags:
        - provider
      summary: Create a new schedule
      description: Create a new schedule under a provider
      operationId: CreateSchedule
      parameters:
        - name: providerId
          in: path
          description: Provider id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Schedule details that needs to be added under provider
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduleDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/providers/{providerId}/schedules/{scheduleId}:
    get:
      tags:
        - provider
      summary: Get a schedule by schedule id
      description: Returns the details of the specified schedule
      operationId: GetSchedule
      parameters:
        - name: providerId
          in: path
          description: Provider id
          required: true
          schema:
            type: integer
            format: int32
        - name: scheduleId
          in: path
          description: Schedule id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    delete:
      tags:
        - provider
      summary: Delete a schedule
      description: Delete specified schedule by schedule id
      operationId: DeleteSchedule
      parameters:
        - name: providerId
          in: path
          description: Provider id
          required: true
          schema:
            type: integer
            format: int32
        - name: scheduleId
          in: path
          description: Schedule id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/providers/{providerId}/slots:
    get:
      tags:
        - provider
      summary: Filtered list of slots
      description: Get a list of slots based on search criteria
      operationId: ListSlots
      parameters:
        - name: providerId
          in: path
          description: Provider id
          required: true
          schema:
            type: integer
            format: int32
        - name: startTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            nullable: true
            default: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlotCollection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
components:
  schemas:
    CreateFeedbackDetailsRequest:
      type: object
      properties:
        patientId:
          type: integer
          format: int32
        text:
          type: string
        rating:
          type: integer
          format: int32
    CreateProviderDetailsRequest:
      allOf:
        - $ref: '#/components/schemas/ProviderBase'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
    CreateScheduleDetailsRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/ScheduleBase'
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    Feedback:
      type: object
      properties:
        id:
          type: integer
          format: int32
        providerId:
          type: integer
          format: int32
        patientId:
          type: integer
          format: int32
        text:
          type: string
        rating:
          type: integer
          format: int32
    FeedbackCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackSummary'
        nextPage:
          type: integer
          format: int32
    FeedbackSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
        providerId:
          type: integer
          format: int32
        patientId:
          type: integer
          format: int32
        text:
          type: string
        rating:
          type: integer
          format: int32
    Gender:
      type: string
      enum:
        - MALE
        - FEMALE
        - OTHER
    Provider:
      allOf:
        - $ref: '#/components/schemas/ProviderBase'
        - type: object
          properties:
            id:
              type: integer
              format: int32
            tags:
              type: array
              items:
                type: string
    ProviderBase:
      type: object
      properties:
        username:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        title:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
        gender:
          $ref: '#/components/schemas/Gender'
        zip:
          type: string
        city:
          type: string
        country:
          type: string
        speciality:
          type: string
        qualification:
          type: string
        designation:
          type: string
        professionalSummary:
          type: string
        interests:
          type: string
        expertise:
          type: string
        hospitalName:
          type: string
        hospitalAddress:
          type: string
        hospitalPhone:
          type: string
    ProviderCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProviderSummary'
        nextPage:
          type: integer
          format: int32
    ProviderSummary:
      allOf:
        - $ref: '#/components/schemas/ProviderBase'
        - type: object
          properties:
            id:
              type: integer
              format: int32
            tags:
              type: array
              items:
                type: string
            aggregateRating:
              type: number
              format: double
            earliestAvailableSlot:
              $ref: '#/components/schemas/Slot'
    Schedule:
      allOf:
        - $ref: '#/components/schemas/ScheduleBase'
        - required:
            - providerId
          type: object
          properties:
            id:
              type: integer
              format: int32
            providerId:
              type: integer
              format: int32
    ScheduleBase:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    ScheduleCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleSummary'
        nextPage:
          type: integer
          format: int32
    ScheduleSummary:
      allOf:
        - $ref: '#/components/schemas/ScheduleBase'
        - required:
            - providerId
          type: object
          properties:
            id:
              type: integer
              format: int32
            providerId:
              type: integer
              format: int32
    Slot:
      type: object
      properties:
        id:
          type: integer
          format: int32
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    SlotCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SlotSummary'
        nextPage:
          type: integer
          format: int32
    SlotSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
        providerId:
          type: integer
          format: int32
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/Status'
    Status:
      type: string
      enum:
        - AVAILABLE
        - UNAVAILABLE
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer