openapi: 3.0.1
info:
  title: Patient Service
  description: Patient service of UHO healthcare app
  version: v1
tags:
  - name: patient
    description: Includes all operations that can be performed by or on patients
paths:
  /v1/patients:
    post:
      tags:
        - patient
      summary: Create a new patient
      description: Creates a new patient in the UHO Database
      operationId: CreatePatient
      parameters: []
      requestBody:
        description: Details of the patient to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatientDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/patients/actions/search:
    get:
      tags:
        - patient
      summary: Filtered list of patients based on search criteria
      description: Filtered list of patients based on search criteria
      operationId: ListPatients
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            nullable: true
            default: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCollection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/patients/username/{username}:
    get:
      tags:
        - patient
      summary: Get patient details by username
      description: Returns the patients details of the patient specified by username
      operationId: GetPatientByUsername
      parameters:
        - name: username
          in: path
          description: Username of the patient to be fetched
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/patients/{patientId}:
    get:
      tags:
        - patient
      summary: Get a patient by patient ID
      description: Returns the patients details of the specified patient
      operationId: GetPatient
      parameters:
        - name: patientId
          in: path
          description: ID of the patient to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: Authorization
          in: header
          description: Access token to make inter service call to provider service to fetch primary provider details
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      tags:
        - patient
      summary: Update a patient
      description: Update details of an existing patient
      operationId: UpdatePatient
      parameters:
        - name: patientId
          in: path
          description: ID of the patient to be updated
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Patient details that needs to be updated in the UHO Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePatientDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    delete:
      tags:
        - patient
      summary: Delete a patient
      description: Delete the specified patient
      operationId: DeletePatient
      parameters:
        - name: patientId
          in: path
          description: ID of the patient to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/patients/{patientId}/actions/authorizeDevice:
    post:
      tags:
        - patient
      summary: Authorize device to collect data
      description: Authorize device of a patient to collect data
      operationId: AuthorizeDevice
      parameters:
        - name: patientId
          in: path
          description: ID of the patient
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
components:
  schemas:
    CreatePatientDetailsRequest:
      allOf:
        - $ref: '#/components/schemas/PatientBase'
        - type: object
          properties:
            username:
              type: string
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    Gender:
      type: string
      enum:
        - MALE
        - FEMALE
        - OTHER
    Patient:
      allOf:
        - $ref: '#/components/schemas/PatientBase'
        - type: object
          properties:
            id:
              type: integer
              format: int32
            username:
              type: string
            primaryCareProvider:
              $ref: '#/components/schemas/Provider'
            insuranceProvider:
              type: string
    PatientBase:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        dateOfBirth:
          type: string
          format: date
        email:
          type: string
          format: email
        gender:
          $ref: '#/components/schemas/Gender'
        zip:
          type: string
        city:
          type: string
        country:
          type: string
    PatientCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PatientSummary'
        nextPage:
          type: integer
          format: int32
    PatientSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        username:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
        gender:
          $ref: '#/components/schemas/Gender'
    Provider:
      type: object
      properties:
        username:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        title:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
        gender:
          $ref: '#/components/schemas/Gender'
        zip:
          type: string
        country:
          type: string
        city:
          type: string
        speciality:
          type: string
        qualification:
          type: string
        designation:
          type: string
        professionalSummary:
          type: string
        interests:
          type: string
        expertise:
          type: string
        hospitalName:
          type: string
        hospitalAddress:
          type: string
        hospitalPhone:
          type: string
    UpdatePatientDetailsRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/PatientBase'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer