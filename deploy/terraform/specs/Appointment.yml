openapi: 3.0.1
info:
  title: Appointment Service
  description: Appointment service of UHO healthcare app
  version: v1
tags:
  - name: appointment
    description: Includes all operations that can be performed by or on appointment
paths:
  /v1/appointments/:
    post:
      tags:
        - appointment
      summary: Create a new appointment
      description: Creates a new appointment in the UHO database
      operationId: CreateAppointment
      parameters:
        - name: Authorization
          in: header
          description: Access token to make inter service call to patient and provider services
          required: false
          schema:
            type: string
      requestBody:
        description: Appointment details that needs to be added to the UHO Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointmentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/appointments/actions/search:
    get:
      tags:
        - appointment
      summary: Filter appointments
      description: Get a list of appointments based on search criteria
      operationId: ListAppointments
      parameters:
        - name: patientId
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: providerId
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - name: startTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: endTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: limit
          in: query
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            nullable: true
            default: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentCollection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /v1/appointments/{appointmentId}:
    get:
      tags:
        - appointment
      summary: Get an appointment by appointment ID
      description: Returns the appointment details of the specified appointment
      operationId: GetAppointment
      parameters:
        - name: appointmentId
          in: path
          description: Appointment id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      tags:
        - appointment
      summary: Update an appointment
      description: Update details of existing appointment
      operationId: UpdateAppointment
      parameters:
        - name: appointmentId
          in: path
          description: Appointment id
          required: true
          schema:
            type: integer
            format: int32
        - name: Authorization
          in: header
          description: Access token to make inter service call to provider and patient services
          required: false
          schema:
            type: string
      requestBody:
        description: Appointment details that needs to be updated in the UHO Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppointmentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    delete:
      tags:
        - appointment
      summary: Delete an appointment
      description: Delete specified appointment by Id
      operationId: DeleteAppointment
      parameters:
        - name: appointmentId
          in: path
          description: Appointment id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
components:
  schemas:
    Appointment:
      allOf:
        - $ref: '#/components/schemas/AppointmentBase'
        - type: object
          properties:
            id:
              type: integer
              format: int32
            status:
              $ref: '#/components/schemas/Status'
    AppointmentBase:
      required:
        - patientId
        - providerId
      type: object
      properties:
        patientId:
          type: integer
          format: int32
        providerId:
          type: integer
          format: int32
        preVisitData:
          type: object
          additionalProperties:
            type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    AppointmentCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentSummary'
        nextPage:
          type: integer
          format: int32
    AppointmentSummary:
      allOf:
        - $ref: '#/components/schemas/AppointmentBase'
        - type: object
          properties:
            id:
              type: integer
              format: int32
            status:
              $ref: '#/components/schemas/Status'
    CreateAppointmentRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/AppointmentBase'
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    Status:
      type: string
      enum:
        - CONFIRMED
        - CANCELLED
    UpdateAppointmentRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
