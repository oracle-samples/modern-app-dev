/*
 * Copyright (c) 2023 Oracle and/or its affiliates.
 * Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracl.com/licenses/upl/
 */
package com.oracle.refapp.frontend.auth;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import com.nimbusds.jose.JOSEException;
import com.nimbusds.jose.jwk.KeyType;
import com.nimbusds.jwt.SignedJWT;
import io.micronaut.security.token.jwt.signature.jwks.DefaultJwkValidator;
import io.micronaut.security.token.jwt.signature.jwks.JwkValidator;
import java.text.ParseException;
import java.util.List;
import java.util.Optional;
import org.junit.jupiter.api.Test;

public class CustomJwksSignatureTest {

  private final CustomJwksSignature customJwksSignature;

  private static final String KEYS =
    "{\"keys\":[{\"kty\":\"RSA\",\"x5t#S256\":\"12FSWG2pGnxIx-w_3NuMIEoRfgirf7eTd2evsdRCMuc\",\"e\":\"AQAB\",\"x5t\":\"mf6WcCcYZxPjk5Kme7C3Z3YSZ2M\",\"kid\":\"SIGNING_KEY\",\"x5c\":[\"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\"],\"key_ops\":[\"wrapKey\",\"verify\",\"encrypt\"],\"alg\":\"RS256\",\"n\":\"m97v6-BnCEDT9Crr9DRPznfM4v-ggpnHeP__edZaWWIm72kitPdszjy_uZGRIxh6NLnHVVloIx_jxdg-q_qxNec2EZNJ2eAKVmw0eGgelz2mUq8rqgWwMZjNkBOTMaWb23QzL3LhiwrOVVfrCdu4MtBXbURbyh2JC4u9cj-gonfW3WDWtYUC-ZUQxOR_O2X_GZyyhMC66dtIgvcwKufO4wA-7D1Bf3yJJbJfWWHxjzY0jknFc5OR2p7xlXliaLkdFh2xEOr_mKwcUkjg1fwnkHnKjVcLoAyQi0YXnL7C7f4_KrQpYFcRe2jfZBsILqXnVcTUHFXVAjlWRAb3mgRNlQ\"}]}";

  private static final String JWT =
    "eyJ4NXQjUzI1NiI6IjEyRlNXRzJwR254SXgtd18zTnVNSUVvUmZnaXJmN2VUZDJldnNkUkNNdWMiLCJ4NXQiOiJtZjZXY0NjWVp4UGprNUttZTdDM1ozWVNaMk0iLCJraWQiOiJTSUdOSU5HX0tFWSIsImFsZyI6IlJTMjU2In0.eyJ1c2VyX3R6IjoiQW1lcmljYVwvQ2hpY2FnbyIsInN1YiI6ImZqRXJfcGF0aWVudCIsInVzZXJfbG9jYWxlIjoiZW4iLCJzaWRsZSI6NDgwLCJpZHBfbmFtZSI6IlVzZXJOYW1lUGFzc3dvcmQiLCJ1c2VyLnRlbmFudC5uYW1lIjoiaWRjcy0yNjU1YzNmNGM3NTY0Y2UwOTYyYWNhOGEzYzFlOTc3NCIsImlkcF9ndWlkIjoiVXNlck5hbWVQYXNzd29yZCIsImFtciI6WyJVU0VSTkFNRV9QQVNTV09SRCJdLCJpc3MiOiJodHRwczpcL1wvaWRlbnRpdHkub3JhY2xlY2xvdWQuY29tXC8iLCJ1c2VyX3RlbmFudG5hbWUiOiJpZGNzLTI2NTVjM2Y0Yzc1NjRjZTA5NjJhY2E4YTNjMWU5Nzc0IiwiY2xpZW50X2lkIjoiZDczZmYzYWE2YzU5NDZlZjg2NmE4NGEyYzk4OWQ2ODAiLCJzaWQiOiI2NTliOTc5NDY5YWQ0NWM0OGY5MTk1OGFiYjA5NDY5YjpkODc3OTEiLCJzdWJfdHlwZSI6InVzZXIiLCJzY29wZSI6Im9wZW5pZCBcL3BhdGllbnQiLCJjbGllbnRfdGVuYW50bmFtZSI6ImlkY3MtMjY1NWMzZjRjNzU2NGNlMDk2MmFjYThhM2MxZTk3NzQiLCJyZWdpb25fbmFtZSI6ImV1LWZyYW5rZnVydC1pZGNzLTEiLCJ1c2VyX2xhbmciOiJlbiIsImV4cCI6MTY1Mjk2NTE5NCwiaWF0IjoxNjUyOTYxNTk0LCJjbGllbnRfZ3VpZCI6IjRjYjNiOTI3MWFhZTRjN2FiNjJkZjc5NmFlNWJjNTQyIiwiY2xpZW50X25hbWUiOiJmakVyIFBhdGllbnQgQ2xpZW50IEFwcGxpY2F0aW9uIiwiaWRwX3R5cGUiOiJMT0NBTCIsInRlbmFudCI6ImlkY3MtMjY1NWMzZjRjNzU2NGNlMDk2MmFjYThhM2MxZTk3NzQiLCJqdGkiOiI2YjczYmQ2MzNmMjk0MGM4YWY5OGM5NmI2YjM0YWYwOSIsImd0cCI6ImF6YyIsInVzZXJfZGlzcGxheW5hbWUiOiJKb2huIERvZSIsIm9wYyI6ZmFsc2UsInN1Yl9tYXBwaW5nYXR0ciI6InVzZXJOYW1lIiwicHJpbVRlbmFudCI6dHJ1ZSwidG9rX3R5cGUiOiJBVCIsImNhX2d1aWQiOiJjYWNjdC04YTU3M2JjMDZhYWI0ZWY2ODYzZDI1MTE1NTA2NTNjMiIsImF1ZCI6WyJodHRwczpcL1wvY2tjdTV3MnN4cGRhMjdmenJtdWl2ZGhzd2kuYXBpZ2F0ZXdheS5hcC1tZWxib3VybmUtMS5vY2kuY3VzdG9tZXItb2NpLmNvbSIsImh0dHBzOlwvXC9pZGNzLTI2NTVjM2Y0Yzc1NjRjZTA5NjJhY2E4YTNjMWU5Nzc0LmlkZW50aXR5Lm9yYWNsZWNsb3VkLmNvbTo0NDMiXSwidXNlcl9pZCI6ImUzNjMyZDEwY2FjMzQ2NDliNTQyZGViYmNhNTAzZWViIiwidGVuYW50X2lzcyI6Imh0dHBzOlwvXC9pZGNzLTI2NTVjM2Y0Yzc1NjRjZTA5NjJhY2E4YTNjMWU5Nzc0LmlkZW50aXR5Lm9yYWNsZWNsb3VkLmNvbTo0NDMiLCJyZXNvdXJjZV9hcHBfaWQiOiIwZmVkOTQ1NzA2ZmE0OWRjYjIyNjllMWI2ZTZhMTJmMCJ9.kocv3Fr1NS93DiyiN2OclIAp_oX_wp-FjLOz_mT6ZUsTnonMV2O9n3st0sfcm0vh1wY1a4OmCwNnsFX7kOd7JH7CumtkroFH0pjT_Gp-yyb9mjnSUQ98_IrWKviG5ztpGTng96fK2IPp1Qr3ZeHlKCJToToCT6aObSiVZ3r-MNByUQbQHAmWn3JdG4xGSYplDTKVtARucrGuSqpsOfVDuLRvPCgwNcGPXFJrt6UddNNGD8pzvlgiE-fUCxC_vdVfv9UPiOwcT1nk7EquU314i3fX3QadYaYIFuFmdJBdkxQ7YZqv0yHO2w3OgIlNHJBD3Xe54aYlXqZDbaVuGDG_Rw";

  public CustomJwksSignatureTest() throws ParseException {
    CustomJwksSignatureConfiguration customJwksSignatureConfiguration = new CustomJwksSignatureConfiguration(
      KeyType.RSA,
      KEYS
    );
    JwkValidator jwkValidator = new DefaultJwkValidator();
    this.customJwksSignature = new CustomJwksSignature(customJwksSignatureConfiguration, jwkValidator);
  }

  @Test
  public void testVerify() throws ParseException, JOSEException {
    assertTrue(this.customJwksSignature.verify(SignedJWT.parse(JWT)));
  }

  @Test
  public void testGetKeys() {
    Optional<List<String>> optionalKeyIds = this.customJwksSignature.getKeyIds();
    assertFalse(optionalKeyIds.isEmpty());
  }
}
